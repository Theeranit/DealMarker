//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;

namespace KK.DealMaker.Core.Data
{
    [MetadataType(typeof(Metadata))]
    public partial class DA_TRN
    {
        #region Metadata
    
    	/// <summary>
    	/// Metadata internal class used for Data Annotations
    	/// </summary>
    	internal class Metadata
        {
            #region Primitive Properties
            
            [Display(Name = "ID")]
            [Required(ErrorMessage = "ID is Required.")]	
            public  System.Guid ID { get; set; }	
            
            [Display(Name = "ENGINE_ DATE")]
            [Required(ErrorMessage = "ENGINE_ DATE is Required.")]	
            public  System.DateTime ENGINE_DATE { get; set; }	
            
            [Display(Name = "INT_ DEAL_ NO")]
            [StringLength(11, ErrorMessage = "INT_ DEAL_ NO must be under 11 characters.")]	
            public  string INT_DEAL_NO { get; set; }	
            
            [Display(Name = "EXT_ DEAL_ NO")]
            [StringLength(50, ErrorMessage = "EXT_ DEAL_ NO must be under 50 characters.")]	
            public  string EXT_DEAL_NO { get; set; }	
            
            [Display(Name = "VERSION")]
            [Required(ErrorMessage = "VERSION is Required.")]	
            public  int VERSION { get; set; }	
            
            [Display(Name = "SOURCE")]
            [StringLength(50, ErrorMessage = "SOURCE must be under 50 characters.")]	
            public  string SOURCE { get; set; }	
            
            [Display(Name = "PRODUCT_ID")]	
            public  Nullable<System.Guid> PRODUCT_ID { get; set; }	
            
            [Display(Name = "INSTRUMENT_ID")]	
            public  Nullable<System.Guid> INSTRUMENT_ID { get; set; }	
            
            [Display(Name = "PORTFOLIO_ID")]	
            public  Nullable<System.Guid> PORTFOLIO_ID { get; set; }	
            
            [Display(Name = "EXT_ PORTFOLIO")]
            [StringLength(10, ErrorMessage = "EXT_ PORTFOLIO must be under 10 characters.")]	
            public  string EXT_PORTFOLIO { get; set; }	
            
            [Display(Name = "TRADE_ DATE")]	
            public  Nullable<System.DateTime> TRADE_DATE { get; set; }	
            
            [Display(Name = "START_ DATE")]	
            public  Nullable<System.DateTime> START_DATE { get; set; }	
            
            [Display(Name = "MATURITY_ DATE")]	
            public  Nullable<System.DateTime> MATURITY_DATE { get; set; }	
            
            [Display(Name = "FLAG_ BUYSELL")]
            [StringLength(1, ErrorMessage = "FLAG_ BUYSELL must be under 1 characters.")]	
            public  string FLAG_BUYSELL { get; set; }	
            
            [Display(Name = "KK_ PCCF")]	
            public  Nullable<decimal> KK_PCCF { get; set; }	
            
            [Display(Name = "KK_ CONTRIBUTE")]	
            public  Nullable<decimal> KK_CONTRIBUTE { get; set; }	
            
            [Display(Name = "BOT_ PCCF")]	
            public  Nullable<decimal> BOT_PCCF { get; set; }	
            
            [Display(Name = "BOT_ CONTRIBUTE")]	
            public  Nullable<decimal> BOT_CONTRIBUTE { get; set; }	
            
            [Display(Name = "OVER_ APPROVER")]
            [StringLength(50, ErrorMessage = "OVER_ APPROVER must be under 50 characters.")]	
            public  string OVER_APPROVER { get; set; }	
            
            [Display(Name = "OVER_ AMOUNT")]	
            public  Nullable<decimal> OVER_AMOUNT { get; set; }	
            
            [Display(Name = "OVER_ SETTL_ AMOUNT")]	
            public  Nullable<decimal> OVER_SETTL_AMOUNT { get; set; }	
            
            [Display(Name = "OVER_ COMMENT")]
            [StringLength(200, ErrorMessage = "OVER_ COMMENT must be under 200 characters.")]	
            public  string OVER_COMMENT { get; set; }	
            
            [Display(Name = "STATUS_ID")]
            [Required(ErrorMessage = "STATUS_ID is Required.")]	
            public  System.Guid STATUS_ID { get; set; }	
            
            [Display(Name = "CTPY_ID")]
            [Required(ErrorMessage = "CTPY_ID is Required.")]	
            public  System.Guid CTPY_ID { get; set; }	
            
            [Display(Name = "INSERT_ BY_ EXT")]
            [StringLength(100, ErrorMessage = "INSERT_ BY_ EXT must be under 100 characters.")]	
            public  string INSERT_BY_EXT { get; set; }	
            
            [Display(Name = "FLAG_ NEARFAR")]
            [StringLength(1, ErrorMessage = "FLAG_ NEARFAR must be under 1 characters.")]	
            public  string FLAG_NEARFAR { get; set; }	
            
            [Display(Name = "NOTIONAL_ THB")]	
            public  Nullable<decimal> NOTIONAL_THB { get; set; }	
            
            [Display(Name = "SPOT_ DATE")]	
            public  Nullable<System.DateTime> SPOT_DATE { get; set; }	
            
            [Display(Name = "FLAG_ SETTLE")]	
            public  Nullable<bool> FLAG_SETTLE { get; set; }	
            
            [Display(Name = "REMARK")]
            [StringLength(250, ErrorMessage = "REMARK must be under 250 characters.")]	
            public  string REMARK { get; set; }	
            
            [Display(Name = "FLAG_ PCE")]	
            public  Nullable<bool> FLAG_PCE { get; set; }	
            
            [Display(Name = "OVER_ COUNTRY_ AMOUNT")]	
            public  Nullable<decimal> OVER_COUNTRY_AMOUNT { get; set; }	

            #endregion
    
            #region Complex Properties
            
            [Display(Name = "FIRST")]
            [Required(ErrorMessage = "FIRST is Required.")]
            public  TRN_TYPE FIRST { get; set; }
            
            [Display(Name = "SECOND")]
            [Required(ErrorMessage = "SECOND is Required.")]
            public  TRN_TYPE SECOND { get; set; }
            
            [Display(Name = "LOG")]
            [Required(ErrorMessage = "LOG is Required.")]
            public  LOG LOG { get; set; }

            #endregion
    
            #region Navigation Properties
            	
            public  ICollection<DA_TRN_CASHFLOW> DA_TRN_FLOW { get; set; }
            	
            public  MA_PORTFOLIO MA_PORTFOLIO { get; set; }
            	
            public  MA_PRODUCT MA_PRODUCT { get; set; }
            	
            public  MA_STATUS MA_STATUS { get; set; }
            	
            public  MA_INSTRUMENT MA_INSRUMENT { get; set; }
            	
            public  MA_COUTERPARTY MA_COUTERPARTY { get; set; }
            	
            public  DA_TMBA_EXTENSION DA_TMBA_EXTENSION { get; set; }

            #endregion
    	}

        #endregion
    }
}
