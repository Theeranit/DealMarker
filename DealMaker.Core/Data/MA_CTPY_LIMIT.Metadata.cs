//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;

namespace KK.DealMaker.Core.Data
{
    [MetadataType(typeof(Metadata))]
    public partial class MA_CTPY_LIMIT
    {
        #region Metadata
    
    	/// <summary>
    	/// Metadata internal class used for Data Annotations
    	/// </summary>
    	internal class Metadata
        {
            #region Primitive Properties
            
            [Display(Name = "ID")]
            [Required(ErrorMessage = "ID is Required.")]	
            public  System.Guid ID { get; set; }	
            
            [Display(Name = "FLAG_ CONTROL")]
            [Required(ErrorMessage = "FLAG_ CONTROL is Required.")]	
            public  bool FLAG_CONTROL { get; set; }	
            
            [Display(Name = "AMOUNT")]
            [Required(ErrorMessage = "AMOUNT is Required.")]	
            public  decimal AMOUNT { get; set; }	
            
            [Display(Name = "EXPIRE_ DATE")]
            [Required(ErrorMessage = "EXPIRE_ DATE is Required.")]	
            public  System.DateTime EXPIRE_DATE { get; set; }	
            
            [Display(Name = "CTPY_ID")]
            [Required(ErrorMessage = "CTPY_ID is Required.")]	
            public  System.Guid CTPY_ID { get; set; }	
            
            [Display(Name = "LIMIT_ID")]
            [Required(ErrorMessage = "LIMIT_ID is Required.")]	
            public  System.Guid LIMIT_ID { get; set; }	

            #endregion
    
            #region Complex Properties
            
            [Display(Name = "LOG")]
            [Required(ErrorMessage = "LOG is Required.")]
            public  LOG LOG { get; set; }

            #endregion
    
            #region Navigation Properties
            	
            public  ICollection<MA_TEMP_CTPY_LIMIT> MA_TEMP_CTPY_LIMIT { get; set; }
            	
            public  MA_LIMIT MA_LIMIT { get; set; }

            #endregion
    	}

        #endregion
    }
}
